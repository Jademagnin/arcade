digraph "argparse::details::HasContainerTraits&lt; T, std::void_t&lt; typename T::value_type, decltype(std::declval&lt; T &gt;().begin()), decltype(std::declval&lt; T &gt;().end()), decltype(std::declval&lt; T &gt;().size())&gt; &gt;"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="argparse::details::\lHasContainerTraits\<\l T, std::void_t\< typename\l T::value_type, decltype\l(std::declval\< T \>().begin\l()), decltype(std::declval\l\< T \>().end()), decltype(std\l::declval\< T \>().size())\> \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="std::true_type",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
